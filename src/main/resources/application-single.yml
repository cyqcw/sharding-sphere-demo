spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  main:
    # 一个实体类对应两张表覆盖，不能动
    allow-bean-definition-overriding: true
  shardingsphere:
    mode.type: Memory
    props:
      sql.show: true
    datasource:
      enabled: true
      names: single
      single:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://121.41.95.194:3306/single_test?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
        username: admin
        password: pwd@admin

    # 垂直分片, 逻辑表和真实节点的表名
    sharding:
      tables:
        # 用户表
        sys_user:
          key-generator:
            column: id
            type: SNOWFLAKE
          actualDataNodes: single.sys_user
          databaseStrategy:
            none:
          tableStrategy:
            none:

        # 订单表
        # 应该是根据user_id分库, 根据order_no分表
        sys_order:
          key-generator:
            column: id
            type: SNOWFLAKE
          actualDataNodes: single.sys_order
          databaseStrategy:
            none:
          tableStrategy:
            none:
        # 订单详情表
        # order_item表
        sys_order_item:
          key-generator:
            column: id
            type: SNOWFLAKE
          actualDataNodes: single.sys_order_item
          databaseStrategy:
            none:
          tableStrategy:
            none:
        # 广播表
        sys_dict:
          key-generator:
            column: id
            type: SNOWFLAKE
          actualDataNodes: single.sys_dict
          databaseStrategy:
            none:
          tableStrategy:
            none:

#      # 配置绑定表,这样就不会做多余的联表查询
#      binding-tables[0]: sys_order, sys_order_item

      # 配置广播表
      broadcast-tables[0]: sys_dict
